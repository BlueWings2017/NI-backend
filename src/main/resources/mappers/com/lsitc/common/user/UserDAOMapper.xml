<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsitc.domain.common.user.dao.UserDAO">
  <select id="selectUserById"
    parameterType="com.lsitc.domain.common.user.entity.UserEntity"
    resultType="com.lsitc.domain.common.user.entity.UserEntity">
    SELECT user_id
         , password
         , name
         , email
         , phone_number
         , created_by
         , created_date
         , last_modified_by
         , last_modified_date
         , is_deleted
         , deleted_by
         , deleted_date
         , role_id
    FROM NI01.sf_user
    WHERE user_id = #{userId}
  </select>
  
  <select id="selectUserByIds"
    parameterType="com.lsitc.domain.common.user.entity.UserEntity"
    resultType="com.lsitc.domain.common.user.entity.UserEntity">
    SELECT user_id
         , password
         , name
         , email
         , phone_number
         , created_by
         , created_date
         , last_modified_by
         , last_modified_date
         , is_deleted
         , deleted_by
         , deleted_date
         , role_id
    FROM NI01.sf_user
    WHERE
        <foreach collection="list" item="item" separator="OR">
        id = #{item.id}
        </foreach>
  </select>
  
  <select id="selectUserByUserId"
    parameterType="com.lsitc.domain.common.user.entity.UserEntity"
    resultType="com.lsitc.domain.common.user.entity.UserEntity">
    SELECT USERID AS userId
		, USERNAME AS name
		, PASSWORD AS password
		, EMAIL AS email
		, PHONE_NUMBER AS phoneNumber
		, ACCESS_TOKEN as accessToken
		, REFRESH_TOKEN as refreshToken
		, USEFLAG AS roleId
    FROM NI01.sf_user
    WHERE USERID = #{userId}
  </select>

  <select id="selectAll"
    resultType="com.lsitc.domain.common.user.entity.UserEntity">
    SELECT user_id
         , password
         , name
         , email
         , phone_number
         , created_by
         , created_date
         , last_modified_by
         , last_modified_date
         , is_deleted
         , deleted_by
         , deleted_date
         , role_id
    FROM NI01.sf_user
  </select>
  
  <select id="selectUserByConditions"
    parameterType="com.lsitc.domain.common.user.entity.UserEntity"
    resultType="com.lsitc.domain.common.user.entity.UserEntity">
    SELECT user_id
         , password
         , name
         , email
         , phone_number
         , created_by
         , created_date
         , last_modified_by
         , last_modified_date
         , is_deleted
         , deleted_by
         , deleted_date
         , role_id
    FROM NI01.sf_user
    WHERE is_deleted = false
    <if test="id != null and id != ''">
    AND id = #{id}
    </if>
    <if test="userId != null and userId != ''">
    AND user_id LIKE CONCAT('%', #{userId}, '%')
    </if>
    <if test="name != null and name != ''">
    AND name LIKE CONCAT('%', #{name}, '%')
    </if>
  </select>

  <insert id="insertUserList"
    parameterType="com.lsitc.domain.common.user.entity.UserEntity">
    INSERT INTO NI01.sf_user
    ( user_id
    , password
    , name
    , email
    , phone_number
    , created_by
    , created_date
    , last_modified_by
    , last_modified_date
    , role_id)
    VALUES 
    <foreach item="item" collection="list" separator=",">
    ( #{item.userId}
    , #{item.password}
    , #{item.name}
    , #{item.email}
    , #{item.phoneNumber}
    , #{item.createdBy}
    , #{item.createdDate}
    , #{item.lastModifiedBy}
    , #{item.lastModifiedDate}
    , #{item.roleId})
    </foreach>
  </insert>

  <insert id="insertUserWithId"
    parameterType="com.lsitc.domain.common.user.entity.UserEntity">
    INSERT INTO NI01.sf_user
    ( id
    , user_id
    , password
    , name
    , email
    , phone_number
    , created_by
    , created_date
    , last_modified_by
    , last_modified_date
    , role_id)
    VALUES 
    <foreach item="item" collection="list" separator=",">
    ( #{item.id}
    , #{item.userId}
    , #{item.password}
    , #{item.name}
    , #{item.email}
    , #{item.phoneNumber}
    , #{item.createdBy}
    , #{item.createdDate}
    , #{item.lastModifiedBy}
    , #{item.lastModifiedDate}
    , #{item.roleId})
    </foreach>
  </insert>

  <update id="updateUserById"
    parameterType="com.lsitc.domain.common.user.entity.UserEntity">
    <foreach item="item" collection="list" separator=";">
    UPDATE NI01.sf_user
    SET user_id            = #{item.userId}
    <if test="item.password != null and item.password != ''">
      , password           = #{item.password}
    </if>
      , name               = #{item.name}
      , email              = #{item.email}
      , phone_number       = #{item.phoneNumber}
      , last_modified_by   = #{item.lastModifiedBy}
      , last_modified_date = #{item.lastModifiedDate}
      , role_id            = #{item.roleId}
    WHERE id = #{item.id}
    </foreach>
  </update>

  <update id="updateUserIsDeletedById"
    parameterType="com.lsitc.domain.common.user.entity.UserEntity">
    <foreach item="item" collection="list" separator=";">
    UPDATE NI01.sf_user
    SET is_deleted         = #{item.isDeleted}
      , deleted_by         = #{item.deletedBy}
      , deleted_date       = #{item.deletedDate}
      , last_modified_by   = #{item.lastModifiedBy}
      , last_modified_date = #{item.lastModifiedDate}
      , role_id            = #{item.roleId}
    WHERE id = #{item.id}
    </foreach>
  </update>

    <update id="updateUserToken"
            parameterType="com.lsitc.domain.common.user.entity.UserEntity">
        UPDATE NI01.sf_user
        SET ACCESS_TOKEN     = #{accessToken}
          , REFRESH_TOKEN    = #{refreshToken}
        WHERE USERID = #{userId}
    </update>
</mapper>